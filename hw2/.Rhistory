sd(gamma_B9999)
deltamethod(~0*x1 + x2 + x3^2, coef(reg), vcov(reg))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50 <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199 <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999 <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B999[i, ] <- gamma_temp
}
}
}
}
sd(gamma_B50)
sd(gamma_B199)
sd(gamma_B999)
quantile(gamma_B9999)
quantile(gamma_B9999, c(0.05, 0.95))
quantile(gamma_B999, c(0.05, 0.95))
quantile(gamma_B50, c(0.05, 0.95))
gamma_B50
set.seed(1234)
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
rm(list=ls())
set.seed(1)
n <- 20
x1 <- rchisq(n, 4)
x2 <- runif(n, 1, 2)
epstemp1 <- rnorm(n, 0, 25)
pepstemp1 <- rep(0.3, n)
epstemp2 <- rnorm(n, 0, 5)
pepstemp2 <- rep(0.7, n)
eps1 <- sample(c(epstemp1, epstemp2), prob = c(pepstemp1, pepstemp2), size = n)
y <- 1.3 * x1 + 0.7 * x2 + eps1
reg <- lm(y ~ x1 + x2)
summary(reg)
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
pepstemp1 <- rep(0.3, n)
epstemp2 <- rnorm(n, 0, 5)
pepstemp2 <- rep(0.7, n)
eps1 <- sample(c(epstemp1, epstemp2), prob = c(pepstemp1, pepstemp2), size = n)
y <- 1.3 * x1 + 0.7 * x2 + eps1
reg <- lm(y ~ x1 + x2)
summary(reg)
coefs <- coef(reg)
g <- function(b){
return(b[2] + b[3]^2)
}
library(numDeriv)
grad_g <- jacobian(g, coefs)
grad_g
v <- vcov(reg)
sqrt(grad_g%*% v %*% t(grad_g))
library(msm)
deltamethod(~0*x1 + x2 + x3^2, coef(reg), vcov(reg))
rm(list=ls())
set.seed(1)
n <- 20
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
pepstemp1 <- rep(0.3, n)
epstemp2 <- rnorm(n, 0, 5)
pepstemp2 <- rep(0.7, n)
eps1 <- sample(c(epstemp1, epstemp2), prob = c(pepstemp1, pepstemp2), size = n)
y <- 1.3 * x1 + 0.7 * x2 + eps1
reg <- lm(y ~ x1 + x2)
summary(reg)
coefs <- coef(reg)
g <- function(b){
return(b[2] + b[3]^2)
}
library(numDeriv)
grad_g <- jacobian(g, coefs)
grad_g
v <- vcov(reg)
sqrt(grad_g%*% v %*% t(grad_g))
library(msm)
deltamethod(~0*x1 + x2 + x3^2, coef(reg), vcov(reg))
rm(list=ls())
set.seed(1)
n <- 20
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
pepstemp1 <- rep(0.3, n)
epstemp2 <- rnorm(n, 0, 5)
pepstemp2 <- rep(0.7, n)
eps1 <- sample(c(epstemp1, epstemp2), prob = c(pepstemp1, pepstemp2), size = n)
y <- 1.3 * x1 + 0.7 * x2 + eps1
reg <- lm(y ~ x1 + x2)
summary(reg)
coefs <- coef(reg)
g <- function(b){
return(b[2] + b[3]^2)
}
library(numDeriv)
grad_g <- jacobian(g, coefs)
grad_g
v <- vcov(reg)
sqrt(grad_g%*% v %*% t(grad_g))
library(msm)
deltamethod(~0*x1 + x2 + x3^2, coef(reg), vcov(reg))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50 <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199 <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999 <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B999[i, ] <- gamma_temp
}
}
}
}
sd(gamma_B50)
sd(gamma_B199)
sd(gamma_B999)
quantile(gamma_B50, c(0.05, 0.95))
set.seed(1776)
n <- 20
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
pepstemp1 <- rep(0.3, n)
epstemp2 <- rnorm(n, 0, 5)
pepstemp2 <- rep(0.7, n)
eps1 <- sample(c(epstemp1, epstemp2), prob = c(pepstemp1, pepstemp2), size = n)
y <- 1.3 * x1 + 0.7 * x2 + eps1
reg <- lm(y ~ x1 + x2)
summary(reg)
coefs <- coef(reg)
g <- function(b){
return(b[2] + b[3]^2)
}
library(numDeriv)
grad_g <- jacobian(g, coefs)
grad_g
v <- vcov(reg)
sqrt(grad_g%*% v %*% t(grad_g))
library(msm)
deltamethod(~0*x1 + x2 + x3^2, coef(reg), vcov(reg))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50 <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199 <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999 <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B999[i, ] <- gamma_temp
}
}
}
}
sd(gamma_B50)
sd(gamma_B199)
sd(gamma_B999)
quantile(gamma_B50, c(0.05, 0.95))
quantile(gamma_B50, c(0.025, 0.975))
eps1or2 <- sample(c(1,2), size = n, prob = (0.3, 0.7), replace = TRUE)
eps1or2 <- sample(c(1,2), size = n, prob = c(0.3, 0.7), replace = TRUE)
eps1or2
sum(eps1or2 == 2)
sum(eps1or2 == 2)/n
eps1or2 <- sample(c(1,2), size = n, prob = c(0.3, 0.7), replace = TRUE)
eps1or2 <- sample(c(1,2), size = n, prob = c(0.3, 0.7), replace = TRUE)
sum(eps1or2 == 2)/n
rm(list=ls())
set.seed(1776)
n <- 20
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
pepstemp1 <- rep(0.3, n)
rm(list=ls())
set.seed(1776)
n <- 20
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
epstemp2 <- rnorm(n, 0, 5)
eps1or2 <- sample(c(1,2), size = n, prob = c(0.3, 0.7), replace = TRUE)
eps <- c()
for (i in 1:n){
if (eps1or2[i] == 1){
eps[i] <- sample(epstemp1, size = 1)
}else{
eps[i] <- sample(epstemp2, size = 1)
}
}
eps
x1
x2
rchisq(n, 4
)
rchisq(n, 4) - 4
rm(list=ls())
set.seed(1776)
n <- 20
x1 <- rchisq(n, 4) - 4
x2 <- runif(n, 1, 2) + 3.5
epstemp1 <- rnorm(n, 0, 25)
epstemp2 <- rnorm(n, 0, 5)
eps1or2 <- sample(c(1,2), size = n, prob = c(0.3, 0.7), replace = TRUE)
eps <- c()
for (i in 1:n){
if (eps1or2[i] == 1){
eps[i] <- sample(epstemp1, size = 1)
}else{
eps[i] <- sample(epstemp2, size = 1)
}
}
y <- 1.3 * x1 + 0.7 * x2 + eps
reg <- lm(y ~ x1 + x2)
summary(reg)
coefs <- coef(reg)
g <- function(b){
return(b[2] + b[3]^2)
}
library(numDeriv)
grad_g <- jacobian(g, coefs)
grad_g
v <- vcov(reg)
sqrt(grad_g%*% v %*% t(grad_g))
library(msm)
deltamethod(~0*x1 + x2 + x3^2, coef(reg), vcov(reg))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50 <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199 <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999 <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B999[i, ] <- gamma_temp
}
}
}
}
sd(gamma_B50)
sd(gamma_B199)
sd(gamma_B999)
quantile(gamma_B50, c(0.025, 0.975))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50 <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199 <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999 <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
#system.time(
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n/2, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B999[i, ] <- gamma_temp
}
}
}
}
quantile(gamma_B999, c(0.025, 0.975))
quantile(gamma_B999, c(0.025, 0.975))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50_f <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199_f <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999_f <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n/2, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50_f[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199_f[i, ] <- gamma_temp
}else{
gamma_B999_f[i, ] <- gamma_temp
}
}
}
}
quantile(gamma_B999_f, c(0.025, 0.975))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50 <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199 <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999 <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B999[i, ] <- gamma_temp
}
}
}
}
sd(gamma_B50)
sd(gamma_B199)
sd(gamma_B999)
quantile(gamma_B999, c(0.025, 0.975))
quantile(gamma_B999_f, c(0.025, 0.975))
B <- c(50, 199, 999*2)
df <- data.frame(y, x1, x2)
gamma_B50_f <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199_f <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999_f <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n/2, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50_f[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199_f[i, ] <- gamma_temp
}else{
gamma_B999_f[i, ] <- gamma_temp
}
}
}
}
quantile(gamma_B999_f, c(0.025, 0.975))
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50_f <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199_f <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999_f <- matrix(NA, nrow = B[3], ncol = 1)
set.seed(1234)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n/2, replace = TRUE),]
betas_temp <- coef(lm(y~x1+x2, data = df_B))
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50_f[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199_f[i, ] <- gamma_temp
}else{
gamma_B999_f[i, ] <- gamma_temp
}
}
}
}
quantile(gamma_B999_f, c(0.025, 0.975))
sd(gamma_B50_f)
sd(gamma_B199_f)
sd(gamma_B999_f)
sd(gamma_B50)
sd(gamma_B199)
sd(gamma_B999)
quantile(sort(gamma_B999_f), c(0.025, 0.975))
quantile(gamma_B999_f, c(0.025, 0.975))
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
X_temp <- as.matrix(cbind(1,df_B[ , 2:3]))
Y_temp <- as.matrix(df_B[ , 1])
xx_inv <- solve(crossprod(X_temp))
betas_temp <- xx_inv %*% crossprod(X_temp, Y_temp)
eps_temp <- Y_temp - X_temp %*% betas_temp
sigma2_temp <- crossprod(eps_temp)/(nrow(Y_temp)-ncol(X_temp))
sigma_beta_temp <- xxinv * sigma2_temp
sigma_beta_temp <- xx_inv * sigma2_temp
sigma2_temp
sigma2_temp <- as.numeric(crossprod(eps_temp)/(nrow(Y_temp)-ncol(X_temp)))
sigma_beta_temp <- xx_inv * sigma2_temp
sigma_beta_temp
diag(sigma_beta_temp)
t(diag(sigma_beta_temp))
sigma_beta_store999 <- matrix(nrow = B[3], ncol = 3)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
X_temp <- as.matrix(cbind(1,df_B[ , 2:3]))
Y_temp <- as.matrix(df_B[ , 1])
xx_inv <- solve(crossprod(X_temp))
betas_temp <- xx_inv %*% crossprod(X_temp, Y_temp)
eps_temp <- Y_temp - X_temp %*% betas_temp
sigma2_temp <- as.numeric(crossprod(eps_temp)/(nrow(Y_temp)-ncol(X_temp)))
sigma_beta_temp <- xx_inv * sigma2_temp
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199[i, ] <- gamma_temp
}else{
gamma_B9999[i, ] <- gamma_temp
sigma_beta_store999[i, ] <- t(diag(sigma_beta_temp))
}
}
}
}
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50_f <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199_f <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999_f <- matrix(NA, nrow = B[3], ncol = 1)
sigma_beta_store999 <- matrix(nrow = B[3], ncol = 3)
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
X_temp <- as.matrix(cbind(1,df_B[ , 2:3]))
Y_temp <- as.matrix(df_B[ , 1])
xx_inv <- solve(crossprod(X_temp))
betas_temp <- xx_inv %*% crossprod(X_temp, Y_temp)
eps_temp <- Y_temp - X_temp %*% betas_temp
sigma2_temp <- as.numeric(crossprod(eps_temp)/(nrow(Y_temp)-ncol(X_temp)))
sigma_beta_temp <- xx_inv * sigma2_temp
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50_g[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199_g[i, ] <- gamma_temp
}else{
gamma_B999_g[i, ] <- gamma_temp
sigma_beta_store999[i, ] <- t(diag(sigma_beta_temp))
}
}
}
B <- c(50, 199, 999)
df <- data.frame(y, x1, x2)
gamma_B50_g <- matrix(NA, nrow = B[1], ncol = 1)
gamma_B199_g <- matrix(NA, nrow = B[2], ncol = 1)
gamma_B999_g <- matrix(NA, nrow = B[3], ncol = 1)
sigma_beta_store999 <- matrix(nrow = B[3], ncol = 3)
for (j in 1:length(B)){
for (i in 1:B[j]){
df_B <- df[sample(nrow(df), size = n, replace = TRUE),]
X_temp <- as.matrix(cbind(1,df_B[ , 2:3]))
Y_temp <- as.matrix(df_B[ , 1])
xx_inv <- solve(crossprod(X_temp))
betas_temp <- xx_inv %*% crossprod(X_temp, Y_temp)
eps_temp <- Y_temp - X_temp %*% betas_temp
sigma2_temp <- as.numeric(crossprod(eps_temp)/(nrow(Y_temp)-ncol(X_temp)))
sigma_beta_temp <- xx_inv * sigma2_temp
gamma_temp <- betas_temp[2] + betas_temp[3]^2
if (j == 1){
gamma_B50_g[i, ] <- gamma_temp
}else{
if (j == 2){
gamma_B199_g[i, ] <- gamma_temp
}else{
gamma_B999_g[i, ] <- gamma_temp
sigma_beta_store999[i, ] <- t(diag(sigma_beta_temp))
}
}
}
}
sigma_beta_store999
colMeans(sigma_beta_store999)
