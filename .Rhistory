ident <- diag(3)
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
library(expm)
Gamma%^%1e6
delta
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
stopifnot(length(nums)==50)
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
Gamma
Gamma%^%1e6
delta <- Gamma%^%1e6[1,]
gamma <- Gamma%^%1e6
delta <- gamma[1,]
mu <- c(1, 5)
sigma <- c(0.5, 2)
k <- 1
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
delta <- as.matrix(delta, ncol = 1)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- diag(diag(Delta %*% matrix(rbind(mu, sigma), nrow = 2))) - (delta %*% t(mu))%^%2
rho <- as.numeric(delta %*% M %*% Gamma%^%k %*% t(mu) - (delta %*% t(mu))%^%2)/ as.numeric(VarX)
VarX <- diag(diag(Delta %*% matrix(rbind(mu, sigma), nrow = 2))) - (delta %*% t(mu))%^%2
(delta %*% t(mu))%^%2
diag(diag(Delta %*% matrix(rbind(mu, sigma), nrow = 2)))
Delta %*% matrix(rbind(mu, sigma), nrow = 2))
Delta %*% matrix(rbind(mu, sigma), nrow = 2)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
matrix(rbind(mu, sigma), nrow = 2)
VarX <- diag(diag(Delta %*% matrix(rbind(mu, sigma), nrow = 2, byrow = TRUE))) - (delta %*% t(mu))%^%2
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2)
delta %*% M %*% Gamma%^%k %*% t(mu) - (delta %*% t(mu))%^%2
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric(t(delta) %*% M %*% Gamma%^%k %*% mu) - (t(delta) %*% mu)^2)/ as.numeric(VarX)
rho <- as.numeric((t(delta) %*% M %*% Gamma%^%k %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
(t(delta) %*% M
)
Gamma%^%k
t(delta) %*% M %*% Gamma%^%k
t(delta) %*% M %*% (Gamma%^%k)
as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu)
)
(t(delta) %*% mu)^2)
(t(delta) %*% mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
demo("norm", package="HiddenMarkov")
demo("lnorm", package="HiddenMarkov")
dthmm
?dthmm
??dthmm
autocorr <- function(mu, sigma, Gamma, delta, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
delta <- as.matrix(delta, ncol = 1)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
}
autocorr(mu, sigma, Gamma, delta, 1)
View(M)
View(delta)
k <- 1
mu <- c(1, 5)
sigma <- c(0.5, 2)
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
stopifnot(length(nums)==50)
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
gamma <- Gamma%^%1e6
delta <- gamma[1,]
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
delta <- as.matrix(delta, ncol = 1)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2demo("lnorm", package="HiddenMarkov")
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
autocorr <- function(mu, sigma, Gamma, delta, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
delta <- as.matrix(delta, ncol = 1)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
}
k <- 1
mu <- c(1, 5)
sigma <- c(0.5, 2)
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
stopifnot(length(nums)==50)
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
gamma <- Gamma%^%1e6
delta <- gamma[1,]
autocorr(mu, sigma, Gamma, delta, 1)
autocorr <- function(mu, sigma, Gamma, delta, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
delta <- as.matrix(delta, ncol = 1)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
return(rho)
}
k <- 1
mu <- c(1, 5)
sigma <- c(0.5, 2)
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
stopifnot(length(nums)==50)
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
gamma <- Gamma%^%1e6
delta <- gamma[1,]
autocorr(mu, sigma, Gamma, delta, 1)
autocorr(mu, sigma, Gamma, delta, 2)
autocorr(mu, sigma, Gamma, delta, 4)
autocorr(mu, sigma, Gamma, delta, 100)
autocorr(mu, sigma, Gamma, delta, 10000000)
Gamma%^%100
t(delta)%*%Gamma%^%100
delta%*%Gamma%^%100
delta%*%(Gamma%^%100)
delta
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(3)
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
return(rho)
}
k <- 1
mu <- c(1, 5)
sigma <- c(0.5, 2)
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
gamma <- Gamma%^%1e6
delta <- gamma[1,]
autocorr(mu, sigma, Gamma, delta)
autocorr(mu, sigma, Gamma, 1)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(2)
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
return(rho)
}
mu <- c(1, 5)
sigma <- c(0.5, 2)
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
gamma <- Gamma%^%1e6
delta <- gamma[1,]
autocorr(mu, sigma, Gamma, 1)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((t(delta) %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
return(rho)
}
autocorr(mu, sigma, Gamma, 1)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (t(delta) %*% mu)^2)/as.numeric(VarX)
return(rho)
}
autocorr(mu, sigma, Gamma, 1)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (t(delta)%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (delta %*% mu)^2)/as.numeric(VarX)
return(rho)
}
autocorr(mu, sigma, Gamma, 1)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (delta%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (delta %*% mu)^2)/as.numeric(VarX)
return(rho)
}
autocorr(mu, sigma, Gamma, 1)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 3, ncol = 3)
ones <- matrix(1, ncol = 3, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 2, ncol = 2)
ones <- matrix(1, ncol = 2, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (delta%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (delta %*% mu)^2)/as.numeric(VarX)
return(rho)
}
autocorr(mu, sigma, Gamma, 1)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 2, ncol = 2)
ones <- matrix(1, ncol = 2, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (delta%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (delta %*% mu)^2)/as.numeric(VarX)
return(rho)
}
autocorr(mu, sigma, Gamma, 1)
delta
M
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 2, ncol = 2)
ones <- matrix(1, ncol = 2, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 2, ncol = 2)
ones <- matrix(1, ncol = 2, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (delta%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (delta %*% mu)^2)/as.numeric(VarX)
return(rho)
}
rm(list=ls())
autocorr <- function(mu, sigma, Gamma, k){
require(expm)
M <- diag(mu)
mu <- as.matrix(mu, ncol = 1)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 2, ncol = 2)
ones <- matrix(1, ncol = 2, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
Delta <- matrix(c(delta[1], delta[1], delta[2], delta[2]), byrow = T, nrow = 2)
VarX <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (delta%*%mu)^2
rho <- as.numeric((delta %*% M %*% (Gamma%^%k) %*% mu) - (delta %*% mu)^2)/as.numeric(VarX)
return(rho)
}
k <- 1
mu <- c(1, 5)
sigma <- c(0.5, 2)
nums <- c(2,3,3,1,3,3,2,3,2,1,
3,3,2,1,1,3,3,3,3,1,
3,2,1,3,2,1,2,1,1,1,
3,1,2,3,3,3,2,2,2,2,
2,1,1,1,1,1,1,2,2,3)
nums <- nums[nums !=3]
Gamma <- table(nums[-length(nums)], nums[-1])
Gamma <- Gamma / rowSums(Gamma)
gamma <- Gamma%^%1e6
delta <- gamma[1,]
autocorr(mu, sigma, Gamma, 1)
autocorr(mu, sigma, Gamma, 10)
Ystore <- matrix(NA,nrow =  nsave, ncol = 1)
p11 <- 0.1
p12 <- 1-p11
p21 <- 0.5
p22 <- 1-p21
mu1 <- 1
sig1 <- 0.5
mu2 <- 5
sig2 <- 2
S <- "b"
nsave <- 10000
Sstore <- matrix(NA, nsave)
ProbStore <- matrix(NA, 2, nsave)
Ystore <- matrix(NA,nrow =  nsave, ncol = 1)
for (i in 1:nsave){
if (S == "b"){
Y <- rnorm(1, mu2, sigma2)
S <- sample(c("a", "b"), size = 1, prob = c(p21, p22))
}else if (S == "a"){
Y <- rnorm(1, mu1, sigma1)
S <- sample(c("a", "b"), size = 1, prob = c(p11, p12))
}
Ystore[i,1] <- Y
Sstore[i, ] <- S
ProbStore[1, i] <- sum(Sstore=="a", na.rm = TRUE)/i
ProbStore[2, i] <- sum(Sstore=="b", na.rm = TRUE)/i}
for (i in 1:nsave){
if (S == "b"){
Y <- rnorm(1, mu2, sig2)
S <- sample(c("a", "b"), size = 1, prob = c(p21, p22))
}else if (S == "a"){
Y <- rnorm(1, mu1, sig1)
S <- sample(c("a", "b"), size = 1, prob = c(p11, p12))
}
Ystore[i,1] <- Y
Sstore[i, ] <- S
ProbStore[1, i] <- sum(Sstore=="a", na.rm = TRUE)/i
ProbStore[2, i] <- sum(Sstore=="b", na.rm = TRUE)/i}
plot(density(Y))
plot(density(Ystore))
Gamma <- matrix(c(p11, p12, p21, p22), nrow = 2, byrow = TRUE)
library(expm)
start1 <- matrix(c(0, 1), nrow = 1)
start2 <- matrix(c(1, 0), nrow = 1)
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
chain2 <- sapply(1:nahead,function(t) start2 %*% (Gamma%^%t))
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
p11 <- 0.1
p12 <- 1-p11
p21 <- 0.5
p22 <- 1-p21
mu1 <- 1
sig1 <- 0.5
mu2 <- 5
sig2 <- 2
S <- "b"
nsave <- 10000
Sstore <- matrix(NA, nsave)
ProbStore <- matrix(NA, 2, nsave)
Ystore <- matrix(NA,nrow =  nsave, ncol = 1)
for (i in 1:nsave){
if (S == "b"){
Y <- rnorm(1, mu2, sig2)
S <- sample(c("a", "b"), size = 1, prob = c(p21, p22))
}else if (S == "a"){
Y <- rnorm(1, mu1, sig1)
S <- sample(c("a", "b"), size = 1, prob = c(p11, p12))
}
Ystore[i,1] <- Y
Sstore[i, ] <- S
ProbStore[1, i] <- sum(Sstore=="a", na.rm = TRUE)/i
ProbStore[2, i] <- sum(Sstore=="b", na.rm = TRUE)/i}
plot(ProbStore[1,],type = "l")
chain1 <- sapply(1:n# Define transition probabilities
p11 <- 0.1
plot(ProbStore[1,],type = "l");lines(ProbStore[2,],type = "l", col = "red")
Gamma <- matrix(c(p11, p12, p21, p22), nrow = 2, byrow = TRUE)
library(expm)
start1 <- matrix(c(0, 1), nrow = 1)
start2 <- matrix(c(1, 0), nrow = 1)
p11 <- 0.1
p12 <- 1-p11
p21 <- 0.5
p22 <- 1-p21
chain1 <- sapply(1:nahead,function(t) start1 %*% (Gamma%^%t))
chain2 <- sapply(1:nahead,function(t) start2 %*% (Gamma%^%t))
nahead <- 20
chain1 <- sapply(1:nahead,function(t) start1 %*% (Gamma%^%t))
chain2 <- sapply(1:nahead,function(t) start2 %*% (Gamma%^%t))
plot(chain1[1,], type = "l", lwd = 4, col = "yellow")
lines(chain2[1,], col = "red", type = "c")
p11 <- 0.1
p12 <- 1-p11
p21 <- 0.5
p22 <- 1-p21
mu1 <- 1
sig1 <- 0.5
mu2 <- 5
sig2 <- 0.5
S <- "b"
nsave <- 10000
Sstore <- matrix(NA, nsave)
ProbStore <- matrix(NA, 2, nsave)
Ystore <- matrix(NA,nrow =  nsave, ncol = 1)
for (i in 1:nsave){
if (S == "b"){
Y <- rnorm(1, mu2, sig2)
S <- sample(c("a"
, "b"), size = 1, prob = c(p21, p22))
}else if (S == "a"){
Y <- rnorm(1, mu1, sig1)
S <- sample(c("a", "b"), size = 1, prob = c(p11, p12))
}
Ystore[i,1] <- Y
Sstore[i, ] <- S
ProbStore[1, i] <- sum(Sstore=="a", na.rm = TRUE)/i
ProbStore[2, i] <- sum(Sstore=="b", na.rm = TRUE)/i}
plot(ProbStore[1,],type = "l")
lines(ProbStore[2,],type = "l", col = "red")
Gamma <- matrix(c(p11, p12, p21, p22), nrow = 2, byrow = TRUE)
ident <- diag(nrow(Gamma))
U <-   matrix(1, nrow = 2, ncol = 2)
ones <- matrix(1, ncol = 2, nrow = 1)
A <- ident - Gamma + U
delta <- ones %*% solve(A)
delta
plot(density(Ystore))
plot(dnorm(muc, sqrt(varc)))
muc <- delta[1] * mu1 + delta[2] * mu2
varc <- delta[1] * (mu[1]^2 + sigma[1]^2) + (1-delta[1])  * (mu[2]^2 + sigma[2]^2) - (delta%*%mu)^2
plot(dnorm(muc, sqrt(varc)))
plot(pnorm(muc, sqrt(varc)))
plot(function(x)dnorm(x,muc, sqrt(varc)))
plot(function(x)dnorm(x,muc, sqrt(varc)), xlim = -3, 10)
plot(function(x)dnorm(x,muc, sqrt(varc)), xlim = c(-3, 10))
plot(function(x)delta[1]*dnorm(x,mu1, sig1) + delta[2] * dnorm(x, mu2, sig2), xlim = c(-3, 10))
plot(density(Ystore, bw = 0.1))
plot(density(Ystore, bw = 0.01))
plot(density(Ystore, bw = 0.1))
plot(density(Ystore, bw = 0.05))
hist(Ystore)
